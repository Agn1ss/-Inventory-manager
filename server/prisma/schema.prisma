generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @default(autoincrement())
  name String
  email String
  password String
  role UserRole
}

enum UserRole {
  USER
  ADMIN
}


model Inventory {
  id                 String     @id @default(cuid())
  title              String
  description        String?
  imageUrl           String?
  creatorId          String
  categoryId         String
  customIdTypeId     String
  is_public          Boolean    @default(false)
  
  customString1State FieldState @default(NONE)
  customString1Name  String?
  customString1Description String?
  customString2State FieldState @default(NONE)
  customString2Name  String?
  customString2Description String?
  customString3State FieldState @default(NONE)
  customString3Name  String?
  customString3Description String?
  
  customText1State   FieldState @default(NONE)
  customText1Name    String?
  customText1Description String?
  customText2State   FieldState @default(NONE)
  customText2Name    String?
  customText2Description String?
  customText3State   FieldState @default(NONE)
  customText3Name    String?
  customText3Description String?
  
  customInt1State    FieldState @default(NONE)
  customInt1Name     String?
  customInt1Description String?
  customInt2State    FieldState @default(NONE)
  customInt2Name     String?
  customInt2Description String?
  customInt3State    FieldState @default(NONE)
  customInt3Name     String?
  customInt3Description String?
  
  customLink1State   FieldState @default(NONE)
  customLink1Name    String?
  customLink1Description String?
  customLink2State   FieldState @default(NONE)
  customLink2Name    String?
  customLink2Description String?
  customLink3State   FieldState @default(NONE)
  customLink3Name    String?
  customLink3Description String?
  
  customBool1State   FieldState @default(NONE)
  customBool1Name    String?
  customBool1Description String?
  customBool2State   FieldState @default(NONE)
  customBool2Name    String?
  customBool2Description String?
  customBool3State   FieldState @default(NONE)
  customBool3Name    String?
  customBool3Description String?
  
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

enum FieldState {
  NONE
  NOT_VISIBLE
  VISIBLE
}

model Item {
  id          String   @id @default(cuid())
  inventoryId String
  creatorId   String
  customId    String
  
  customString1  String?
  customString2  String?
  customString3  String?
  
  customText1    String? @db.Text
  customText2    String? @db.Text
  customText3    String? @db.Text
  
  customInt1     Int?
  customInt2     Int?
  customInt3     Int?
  
  customLink1    String?
  customLink2    String?
  customLink3    String?
  
  customBool1    Boolean?
  customBool2    Boolean?
  customBool3    Boolean?
  
  likes     Like[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id     String @id @default(cuid())
  itemId String
  userId String  

  @@unique([itemId, userId], name: "unique_like_per_user")
  @@map("likes")
  
  item Item @relation(fields: [itemId], references: [id], onDelete: Cascade)
}

model Category {
  id  String   @id @default(cuid())
  name String

  Inventories Inventory[]
}

model Tag {
  id
  name
}

model Comment {
  id
  description
  creatorId
  itemId
  createdAt
}

model CustomIdType {
  id          String        @id @default(cuid())
  fixedText   String?       @db.Text
  randomType  RandomType?
  dateFormat  DateFormat?
  sequenceName String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@map("custom_id_types")
}

enum RandomType {
  BIT_20      
  BIT_32      
  DIGITS_6     
  DIGITS_9
  GUID
}

enum DateFormat {
  YYYY            // 2023
  YYYYMMDD        // 20231225
  YYYYMMDDHHmmss  // 20231225143045
  YYYY_MM_DD      // 2023-12-25
  DDMMYYYY        // 25122023
}